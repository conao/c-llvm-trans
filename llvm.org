#+title: Transrate C to LLVM
#+author: Naoya Yamashita
#+export_file_name: llvm

#+name: clang
#+header: :var filename="test" olevel=0 :exports none :cache yes :results raw drawer
#+begin_src emacs-lisp
  (let* ((dir "src/")
         (c-filepath (format "%s%s.c" dir filename))
         (ll-filepath (format "%s%s.ll" dir filename)))
    (shell-command (format "clang -c -S -emit-llvm -O%d %s -o %s" olevel c-filepath ll-filepath))
    (format "%s\n\n%s"
            (format "#+begin_src C -n\n%s#+end_src" (f-read-text c-filepath))
            (format "#+begin_src llvm -n \n%s#+end_src" (f-read-text ll-filepath))))
#+end_src

* Return value
#+call: clang("01_return", 3)

#+RESULTS[ab5491bb9dce1e650ab80d7370778bf4f42167a2]:
:RESULTS:
#+begin_src C -n
int main() {
    return 42;
}
#+end_src

#+begin_src llvm -n 
define i32 @main() {
  ret i32 42
}
#+end_src
:END:

