#+title: Transrate C to LLVM
#+author: Naoya Yamashita
#+export_file_name: llvm

#+name: clang
#+header: :var filename="test" :exports none :cache yes :results raw drawer
#+begin_src emacs-lisp
  (shell-command (format "clang -c -S -emit-llvm -O0 %s.c" filename))
  (format "%s\n\n%s"
   (format "#+begin_src C -n\n%s#+end_src" (f-read-text (format "%s.c" filename)))
   (format "#+begin_src llvm -n \n%s#+end_src" (f-read-text (format "%s.ll" filename))))
#+end_src

* Simple IO

#+call: clang("01_return")

#+RESULTS[9309c358047da95ccc5723ba729033f5c9366f92]:
:RESULTS:
#+begin_src C -n
int main() {
    return 42;
}
#+end_src

#+begin_src llvm -n 
; Function Attrs: nounwind ssp uwtable
define i32 @main() {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  ret i32 42
}
#+end_src
:END:
